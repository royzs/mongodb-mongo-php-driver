<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for MongoId
 * Generated by PHPUnit on 2009-04-10 at 13:30:28.
 */
class MongoIdTest extends PHPUnit_Framework_TestCase
{
    public function testBasic() {
        if (preg_match($this->sharedFixture->version_51, phpversion())) {
            $this->markTestSkipped("No implicit __toString in 5.1");
            return;
        }

        $id1 = new MongoId();
        $this->assertEquals(strlen("$id1"), 24);

        $copy = new MongoId($id1);
        $this->assertEquals((string)$id1, (string)$copy);

        $id2 = new MongoId('49c10bb63eba810c0c3fc158');
        $this->assertEquals((string)$id2, '49c10bb63eba810c0c3fc158');
      
        $c = $this->sharedFixture->selectCollection("phpunit", "id");
        $c->drop();
        $c->insert(array("_id" => 1));
        $obj = $c->findOne();
        $this->assertEquals($obj['_id'], 1);
    }

    // shouldn't throw an error, just ignore it
    public function testIncorrect() {
        if (preg_match($this->sharedFixture->version_51, phpversion())) {
            $this->markTestSkipped("No implicit __toString in 5.1");
            return;
        }

        $id1 = new MongoId("foo");
        $this->assertNotEquals((string)$id1, "foo");
        $this->assertEquals(strlen("$id1"), 24);

        $id2 = new MongoId(234);
        $this->assertNotEquals("$id2", 234);
        $this->assertEquals(strlen("$id2"), 24);

        $this->assertNotEquals((string)$id1, (string)$id2);
    }
  
    public function testSerialize() {
        if (preg_match($this->sharedFixture->version_51, phpversion())) {
            $this->markTestSkipped("No implicit __toString in 5.1");
            return;
        }

        $id = new MongoId("4a4391aa82c94f4f3adc0878");
        $x = serialize($id);
        $this->assertEquals('C:7:"MongoId":24:{4a4391aa82c94f4f3adc0878}', $x);
        
        $y = unserialize($x);
        $this->assertTrue($y instanceof MongoId);
        $this->assertEquals("$id", "$y");
    }

    public function testIncrement() {
        if (preg_match($this->sharedFixture->version_51, phpversion())) {
            $this->markTestSkipped("No implicit __toString in 5.1");
            return;
        }

        $num = 10;
        $id = array();
        for ($i=0; $i<$num; $i++) {
            $id[] = new MongoId();
            sleep(1);
        }
        
        for ($i=0; $i<$num-1; $i++) {
            $this->assertGreaterThan($id[$i]."", $id[$i+1]."", $id[$i] . ", " . $id[$i+1]);
        }
    }

    public function testTimestamp() {
        $id = new MongoId;
        $time = time();

        $this->assertEquals($id->getTimestamp(), $time);
    }
}

?>
