<?php
require_once 'PHPUnit/Framework.php';

include 'Mongo/GridFSFileClassic.php';

/**
 * Test class for MongoGridFSClassicFile.
 * Generated by PHPUnit on 2009-04-09 at 18:09:02.
 */
class MongoGridFSFileClassicTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    MongoGridFSFile
     * @access protected
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
    {
        if (file_exists('tests/classic.jpg')) {
            unlink('tests/classic.jpg');
        }

        $db = $this->sharedFixture->selectDB('phpunit');

        $grid = $db->getGridFS('_files', '_chunks');
        $grid->drop();

        $files = $db->selectCollection('_files');

        $chunks = $db->selectCollection('_chunks');

        $chunk4 = array('cn' => 4, 'data' => new MongoBinData('xyz'));
        $chunks->insert($chunk4);
        $chunk3 = array('cn' => 3, 'data' => new MongoBinData('rst'), 'next' => MongoDBRef::create($chunks->getName(), $chunk4['_id']));
        $chunks->insert($chunk3);
        $chunk2 = array('cn' => 2, 'data' => new MongoBinData('lmno'), 'next' => MongoDBRef::create($chunks->getName(), $chunk3['_id']));
        $chunks->insert($chunk2);
        $chunk1 = array('cn' => 1, 'data' => new MongoBinData('abc'), 'next' => MongoDBRef::create($chunks->getName(), $chunk2['_id']));
        $chunks->insert($chunk1);

        $files->insert(array("filename" => "classic.jpg", 
                             "contentType" => "image/jpeg",
                             "length" =>  4, 
                             "chunkSize" => 4 , 
                             "next" => MongoDBRef::create($chunks->getName(), $chunk1['_id'])));


        $file = $grid->findOne();

        $this->object = new MongoGridFSFileClassic($file);
        $this->object->start = memory_get_usage(true);
    }

    protected function tearDown() {
        $this->assertEquals($this->object->start, memory_get_usage(true));
    }

    public function testGetBytes() {
        $str = $this->object->getBytes();
        $this->assertEquals('abclmnorstxyz', $str);
    }
    
    public function testWrite() {
        $bytes = $this->object->write('tests/classic.jpg');
        $this->assertEquals(13, $bytes);
    }
}
?>
