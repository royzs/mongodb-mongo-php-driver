<?php
require_once 'PHPUnit/Framework.php';

require_once 'Mongo/Util.php';

/**
 * Test class for Mongo.
 * Generated by PHPUnit on 2009-04-09 at 18:09:02.
 */
class MongoUtilTest extends PHPUnit_Framework_TestCase
{
    public function testToIndexString() {
        $this->assertEquals(MongoUtil::toIndexString(null), '_1');
        $this->assertEquals(MongoUtil::toIndexString(52), '52_1');
        $this->assertEquals(MongoUtil::toIndexString('x'), 'x_1');
        $this->assertEquals(MongoUtil::toIndexString('x.y.z'), 'x_y_z_1');
        $this->assertEquals(MongoUtil::toIndexString('x_y.z'), 'x_y_z_1');
        $this->assertEquals(MongoUtil::toIndexString(array('x' => 1)), 'x_1');
        $this->assertEquals(MongoUtil::toIndexString(array('x' => -1)), 'x_-1');
        $this->assertEquals(MongoUtil::toIndexString(array('x' => 1, 'y' => -1)), 'x_1_y_-1');
    }

    /**
     * @expectedException InvalidArgumentException
     */
    public function testDBCommandException1()
    {
        $link = $this->sharedFixture->connection;
        MongoUtil::dbCommand($link, null, 'phpunit');
    }

    /**
     * @expectedException InvalidArgumentException
     */
    public function testDBCommandException2()
    {
        $link = $this->sharedFixture->connection;
        MongoUtil::dbCommand($link, 7, 'phpunit');
    }

    /**
     * @expectedException InvalidArgumentException
     */
    public function testDBCommandException3()
    {
        $link = $this->sharedFixture->connection;
        MongoUtil::dbCommand($link, "asdf", 'phpunit');
    }

    /**
     * @expectedException InvalidArgumentException
     */
    public function testDBCommandException4()
    {
        MongoUtil::dbCommand(null, array(), 'phpunit');
    }


    public function testDBCommand() {
        $db = 'phpunit';
        $link = $this->sharedFixture->connection;

        $x = MongoUtil::dbCommand($link, array(), $db);
        $this->assertEquals($x['errmsg'], "no such cmd");
        $this->assertEquals($x['ok'], 0);

        $x = MongoUtil::dbCommand($link, array(MongoUtil::PROFILE => 1), $db);
        $this->assertEquals($x['was'], 0);
        $this->assertEquals($x['ok'], 1);
    }
}
?>

